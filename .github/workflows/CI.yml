name: 'Terraform Plan'

on:
  push:
    branches:
      - master


env:
  TF_VAR_YC_FOLDER_ID: ${{ secrets.YA_FOLDER_ID }}
  TF_VAR_YC_CLOUD_ID: ${{ secrets.YA_CLOUD_ID }}
  TF_VAR_YC_TOKEN: ${{ secrets.YA_TOKEN }}


jobs:

  infra_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.CUSTOM_PAT }}
        ref: ${{ github.head_ref }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.8

    #- name: Terraform Format
    #  id: fmt
    #  run: terraform fmt -recursive -check >> $Env:GITHUB_OUTPUT

    - name: Terraform Init
      id: init
      run: terraform init >> $Env:GITHUB_OUTPUT

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color >> $Env:GITHUB_OUTPUT

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false -out=tfplan && terraform show -no-color tfplan
      continue-on-error: False

    - name: Render template
      id: template
      uses: chuhlomin/render-template@v1.4
      env:
        PLAN: "terraform\n${{ steps.plan.outcome.stdout }}"
      with:
        template: .github/pull-request-template.md
        vars: |
          terraform_init: ${{ steps.init.outcome }}
          terraform_validate: ${{ steps.validate.outcome }}
          terraform_plan: ${{ steps.plan.outcome }}
          
          terraform_plan_summary: ${{ process.env.PLAN }}

    - name: Create Pull Request
      if: steps.plan.outcome == 'success'
      id: cpr
      uses: peter-evans/create-pull-request@v4
      with:
        body: ${{ steps.template.outputs.result }}