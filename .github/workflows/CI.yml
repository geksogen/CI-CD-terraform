name: 'Terraform Plan'

on:
  push:
    branches:
      - master

env:
  TF_VAR_YC_FOLDER_ID: ${{ secrets.YA_FOLDER_ID }}
  TF_VAR_YC_CLOUD_ID: ${{ secrets.YA_CLOUD_ID }}
  TF_VAR_YC_TOKEN: ${{ secrets.YA_TOKEN }}


jobs:

  infra_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.8

    #- name: Terraform Format
    #  id: fmt
    #  run: terraform fmt -recursive -check >> $Env:GITHUB_OUTPUT

    - name: Terraform Init
      id: init
      run: terraform init >> $Env:GITHUB_OUTPUT

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color >> $Env:GITHUB_OUTPUT

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      continue-on-error: False

    - name: Add Plan Comment
      if: steps.plan.outcome == 'success'
      uses: actions/github-script@v6
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.CUSTOM_PAT }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`${process.env.PLAN}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Post Plan Failure
      if: steps.plan.outcome == 'failure'
      uses: actions/github-script@v6
      env:
        PLAN_FAIL: "terraform\n${{ steps.plan.outputs.stderr }}"
      with:
        github-token: ${{ secrets.CUSTOM_PAT }}
        script: |
          const output = `### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan Error</summary>

          \`\`\`${process.env.PLAN_FAIL}\`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
